{
  "paragraphs": [
    {
      "text": "%md\n# Пример создания и использования Spark UDAF",
      "user": "anonymous",
      "dateUpdated": "2023-06-26T16:43:42+0300",
      "progress": 0,
      "config": {
        "editorHide": false,
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Пример создания и использования Spark UDAF</h1>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1687614219583_998203470",
      "id": "paragraph_1687614219583_998203470",
      "dateCreated": "2023-06-24T16:43:39+0300",
      "dateStarted": "2023-06-26T16:43:42+0300",
      "dateFinished": "2023-06-26T16:43:42+0300",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:350"
    },
    {
      "text": "%md\nUser-Defined Aggregate Functions (UDAFs) - это разрабатываемые пользователем процедуры, которые воздействуют на несколько строк одновременно и возвращают в результате одно агрегированное значение.",
      "user": "anonymous",
      "dateUpdated": "2023-06-26T16:43:42+0300",
      "progress": 0,
      "config": {
        "editorHide": true,
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>User-Defined Aggregate Functions (UDAFs) - это разрабатываемые пользователем процедуры, которые воздействуют на несколько строк одновременно и возвращают в результате одно агрегированное значение.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1687614447399_1940774320",
      "id": "paragraph_1687614447399_1940774320",
      "dateCreated": "2023-06-24T16:47:27+0300",
      "dateStarted": "2023-06-26T16:43:42+0300",
      "dateFinished": "2023-06-26T16:43:42+0300",
      "status": "FINISHED",
      "$$hashKey": "object:351"
    },
    {
      "text": "%md\n## Базовый класс\n\n**Aggregator[-IN, BUF, OUT]**\n\nПараметры:\n* **IN** - Тип входных данных\n* **BUF** - Тип промежуточного значения\n* **OUT** - Тип выходного результата\n\nМетоды:\n* **bufferEncoder: Encoder[BUF]** - Кодировщик для типа промежуточного значения\n* **finish(reduction: BUF): OUT** - Преобразует выходные данные\n* **merge(b1: BUF, b2: BUF): BUF** - Объединяет два промежуточных значения\n* **outputEncoder: Encoder[OUT]** - Кодировщик для типа выходного значения\n* **reduce(b: BUF, a: IN): BUF** - Преобразует входное значение *a* в текущее промежуточное значение. Для повышения производительности функция может изменять *b* и возвращать его вместо создания нового объекта для *b*\n* **zero: BUF** - Начальное значение промежуточного результата",
      "user": "anonymous",
      "dateUpdated": "2023-06-26T16:43:42+0300",
      "progress": 0,
      "config": {
        "editorHide": true,
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Базовый класс</h2>\n<p><strong>Aggregator[-IN, BUF, OUT]</strong></p>\n<p>Параметры:</p>\n<ul>\n<li><strong>IN</strong> - Тип входных данных</li>\n<li><strong>BUF</strong> - Тип промежуточного значения</li>\n<li><strong>OUT</strong> - Тип выходного результата</li>\n</ul>\n<p>Методы:</p>\n<ul>\n<li><strong>bufferEncoder: Encoder[BUF]</strong> - Кодировщик для типа промежуточного значения</li>\n<li><strong>finish(reduction: BUF): OUT</strong> - Преобразует выходные данные</li>\n<li><strong>merge(b1: BUF, b2: BUF): BUF</strong> - Объединяет два промежуточных значения</li>\n<li><strong>outputEncoder: Encoder[OUT]</strong> - Кодировщик для типа выходного значения</li>\n<li><strong>reduce(b: BUF, a: IN): BUF</strong> - Преобразует входное значение <em>a</em> в текущее промежуточное значение. Для повышения производительности функция может изменять <em>b</em> и возвращать его вместо создания нового объекта для <em>b</em></li>\n<li><strong>zero: BUF</strong> - Начальное значение промежуточного результата</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1687614573398_80555371",
      "id": "paragraph_1687614573398_80555371",
      "dateCreated": "2023-06-24T16:49:33+0300",
      "dateStarted": "2023-06-26T16:43:42+0300",
      "dateFinished": "2023-06-26T16:43:42+0300",
      "status": "FINISHED",
      "$$hashKey": "object:352"
    },
    {
      "text": "%md\n## Простой пример: Среднее",
      "user": "anonymous",
      "dateUpdated": "2023-06-26T16:43:43+0300",
      "progress": 0,
      "config": {
        "editorHide": false,
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Простой пример: Среднее</h2>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1687616978250_1242014108",
      "id": "paragraph_1687616978250_1242014108",
      "dateCreated": "2023-06-24T17:29:38+0300",
      "dateStarted": "2023-06-26T16:43:43+0300",
      "dateFinished": "2023-06-26T16:43:43+0300",
      "status": "FINISHED",
      "$$hashKey": "object:353"
    },
    {
      "text": "import org.apache.spark.sql.{Encoder, Encoders}\nimport org.apache.spark.sql.expressions.Aggregator\n\ncase class Average(var sum: Long, var count: Long)\n\nclass MyAverage extends Aggregator[Long, Average, Double] {\n  // Начальное значение. Должно соответствовать свойству: любое b + zero = b\n  def zero: Average = Average(0L, 0L)\n  // Объединение двух значений в новое значение.\n  // Для повышения производительности функция может изменять `buffer` и \n  // возвращать его вместо создания нового объекта.\n  def reduce(buffer: Average, data: Long): Average = {\n    buffer.sum += data\n    buffer.count += 1\n    buffer\n  }\n  // Объединение двух промежуточных значения\n  def merge(b1: Average, b2: Average): Average = {\n    b1.sum += b2.sum\n    b1.count += b2.count\n    b1\n  }\n  // Преобразование выходных данных\n  def finish(reduction: Average): Double = reduction.sum.toDouble / reduction.count\n  // Кодировщик для типа промежуточного значения\n  def bufferEncoder: Encoder[Average] = Encoders.product\n  // Кодировщик для типа выходного значения\n  def outputEncoder: Encoder[Double] = Encoders.scalaDouble\n}",
      "user": "anonymous",
      "dateUpdated": "2023-06-26T17:40:17+0300",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {
          "bdtMeta": {
            "inlay": {
              "size": {
                "height": 237
              }
            }
          }
        },
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.{Encoder, Encoders, RelationalGroupedDataset, functions}\nimport org.apache.spark.sql.expressions.Aggregator\ndefined class Average\ndefined class MyAverage\nwarning: previously defined object MyAverage is not a companion to class MyAverage.\nCompanions must be defined together; you may wish to use :paste mode for this.\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1687616428815_1013780007",
      "id": "paragraph_1687616428815_1013780007",
      "dateCreated": "2023-06-24T17:20:28+0300",
      "dateStarted": "2023-06-26T16:43:43+0300",
      "dateFinished": "2023-06-26T16:43:43+0300",
      "status": "FINISHED",
      "$$hashKey": "object:354"
    },
    {
      "text": "val data = Seq((\"Michael\", 3000), (\"Andy\", 4500), (\"Justin\", 3500), (\"Berta\", 4000)).toDF(\"name\", \"salary\")\ndata.show()\n//data.createOrReplaceTempView(\"employees\")",
      "user": "anonymous",
      "dateUpdated": "2023-06-26T16:43:43+0300",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {
          "bdtMeta": {
            "inlay": {
              "size": {
                "height": 238
              }
            }
          }
        },
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+------+\n|   name|salary|\n+-------+------+\n|Michael|  3000|\n|   Andy|  4500|\n| Justin|  3500|\n|  Berta|  4000|\n+-------+------+\n\n\u001b[1m\u001b[34mdata\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [name: string, salary: int]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1687723967141_940990588",
      "id": "paragraph_1687723967141_940990588",
      "dateCreated": "2023-06-25T23:12:47+0300",
      "dateStarted": "2023-06-26T16:43:43+0300",
      "dateFinished": "2023-06-26T16:43:43+0300",
      "status": "FINISHED",
      "$$hashKey": "object:355"
    },
    {
      "text": "val myAverage = new MyAverage\nval myAverageUdf = udaf(myAverage)",
      "user": "anonymous",
      "dateUpdated": "2023-06-26T16:43:43+0300",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mmyAverage\u001b[0m: \u001b[1m\u001b[32mMyAverage\u001b[0m = MyAverage@3f243827\n\u001b[1m\u001b[34mmyAverageUdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.expressions.UserDefinedFunction\u001b[0m = UserDefinedAggregator(MyAverage@3f243827,class[value[0]: bigint],None,true,true)\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1687692464672_230520268",
      "id": "paragraph_1687692464672_230520268",
      "dateCreated": "2023-06-25T14:27:44+0300",
      "dateStarted": "2023-06-26T16:43:43+0300",
      "dateFinished": "2023-06-26T16:43:43+0300",
      "status": "FINISHED",
      "$$hashKey": "object:356"
    },
    {
      "text": "//val result = spark.sql(\"SELECT myAverage(salary) as average_salary FROM employees\")\nval result = data.agg(myAverageUdf($\"salary\").as(\"average_salary\"))\nresult.show()",
      "user": "anonymous",
      "dateUpdated": "2023-06-26T16:43:43+0300",
      "progress": 20,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------+\n|average_salary|\n+--------------+\n|        3750.0|\n+--------------+\n\n\u001b[1m\u001b[34mresult\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [average_salary: double]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://192.168.88.21:4040/jobs/job?id=48",
              "$$hashKey": "object:901"
            },
            {
              "jobUrl": "http://192.168.88.21:4040/jobs/job?id=49",
              "$$hashKey": "object:902"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1687723992819_2099612953",
      "id": "paragraph_1687723992819_2099612953",
      "dateCreated": "2023-06-25T23:13:12+0300",
      "dateStarted": "2023-06-26T16:43:43+0300",
      "dateFinished": "2023-06-26T16:43:43+0300",
      "status": "FINISHED",
      "$$hashKey": "object:357"
    },
    {
      "text": "",
      "user": "anonymous",
      "dateUpdated": "2023-06-26T16:43:43+0300",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1687725793670_1854505122",
      "id": "paragraph_1687725793670_1854505122",
      "dateCreated": "2023-06-25T23:43:13+0300",
      "status": "FINISHED",
      "$$hashKey": "object:358"
    }
  ],
  "name": "MyAverage",
  "id": "2J6J57PK5",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {
    "isRunning": false
  },
  "path": "/otus/MyAverage"
}